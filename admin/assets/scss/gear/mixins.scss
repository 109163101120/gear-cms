@mixin box-sizing($value: border-box) {
    box-sizing: $value;
}

@mixin shadow($size: 'md') {
    @if $size == 'sm' {
        box-shadow: 0 1px 4px 1px rgba($shadow, .14);
    } @else if $size == 'lg' {
        box-shadow: 0 4px 11px 1px rgba($shadow, .16);
    } @else {
        box-shadow: 0 3px 7px 1px rgba($shadow, .10);
    }
}

@mixin gradient($start: #fff, $stop: #000) {
    background: $start;
    background: -moz-linear-gradient(45deg, $start 0%, $stop 100%);
    background: -webkit-linear-gradient(45deg, $start 0%, $stop 100%);
    background: linear-gradient(45deg, $start 0%, $stop 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$start', endColorstr='$stop',GradientType=1);
}

@mixin transition($args: all, $duration: .25s, $easing: ease, $delay: 0s) {
    transition: $args $duration $easing $delay;
}

@mixin user-select($value: none) {
    -webkit-user-select: $value;
    -moz-user-select: $value;
    -ms-user-select: $value;
    user-select: $value;
}

@mixin round($radius: 50%) {
    border-radius: $radius;
}

@mixin transform($args) {
    -webkit-transform: $args;
    -ms-transform: $args;
    transform: $args;
}

@mixin translate($x: 0, $y: 0) {
    @include transform(translate($x, $y));
}

@mixin display-flex() {
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex-wrap($value: wrap) {
    -webkit-flex-wrap: $value;
    -ms-flex-wrap: $value;
    flex-wrap: $value;
}

@mixin flex-basis($size: 0) {
    -webkit-flex-basis: $size;
    -ms-flex-preferred-size: $size;
    flex-basis: $size;
}

@mixin clear-after() {
    &:after {
        content: '';
        clear: both;
        display: block;
    }
}
